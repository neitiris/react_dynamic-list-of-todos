{"version":3,"sources":["api/api.js","TodoItem.js","App.js","index.js"],"names":["baseUrl","getTodos","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","urlParams","url","response","todos","wrap","_context","prev","next","fetch","concat","sent","console","log","json","abrupt","stop","_x","apply","this","arguments","getUsers","_ref2","_callee2","users","_context2","User","user","react_default","createElement","name","TodoItem","todoItem","id","title","TodoItem_User","type","checked","completed","App","state","sortedTodoList","isLoaded","isLoading","tableItemsAmount","activePage","sortType","sortDirection","_this","handleClick","setState","setTimeout","sortData","sortCase","direction","toConsumableArray","sort","b","localeCompare","then","userData","_this2","todosData","_this3","todosWithUser","map","todo","objectSpread","find","userId","className","onClick","src_TodoItem","React","Component","propTypes","shape","number","string","username","email","address","street","suite","city","phone","website","company","boolean","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2df2958b.chunk.js","sourcesContent":["const baseUrl = 'https://jsonplaceholder.typicode.com';\n\nexport const getTodos = async(urlParams) => {\n  const url = '/todos';\n  const response = await fetch(`${baseUrl}${url}${urlParams}`);\n  console.log(`${baseUrl}${url}${urlParams}`);\n  const todos = await response.json();\n  return todos;\n};\n\nexport const getUsers = async() => {\n  const url = '/users';\n  const response = await fetch(`${baseUrl}${url}`);\n  const users = await response.json();\n  return users;\n};\n","import propTypes from 'prop-types';\nimport React from 'react';\n\nconst TodoItem = ({ todoItem }) => (\n  <tr>\n    <td>{todoItem.id}</td>\n    <td>\n      {todoItem.title}\n    </td>\n    <td>\n      <User user={todoItem.user} />\n    </td>\n    <td>\n      <input\n        type=\"checkbox\"\n        checked={todoItem.completed}\n      />\n    </td>\n  </tr>\n);\n\nconst User = ({ user }) => (\n  <div>{user.name}</div>\n);\n\nTodoItem.propTypes = {\n  todoItem: propTypes.shape({\n    id: propTypes.number,\n    completed: propTypes.bool,\n    title: propTypes.string,\n    user: propTypes.string,\n  }).isRequired,\n};\n\nUser.propTypes = {\n  user: propTypes.shape({\n    name: propTypes.string,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport './App.css';\nimport propTypes from 'prop-types';\nimport { getTodos, getUsers } from './api/api';\nimport TodoItem from './TodoItem';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    sortedTodoList: [],\n    users: [],\n    isLoaded: false,\n    isLoading: false,\n    tableItemsAmount: 200,\n    activePage: 1,\n    sortType: 'id',\n    sortDirection: 1, // 1 = 'asc', // 2 = desc\n  };\n\n  urlParams = (\n    `?_limit=${this.state.tableItemsAmount}\n    &_page=${this.state.activePage}\n    &_sort=${this.state.sortType}\n    &_order=${this.state.sortDirection === 1 ? 'asc' : 'desc'}`);\n\n  async componentDidMount() {\n    await getUsers()\n      .then((userData) => {\n        this.setState(\n          { users: userData },\n        );\n      });\n    await getTodos(this.urlParams)\n      .then((todosData) => {\n        this.setState(\n          {\n            todos: todosData,\n          },\n        );\n      });\n    console.log(this.state);\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n    setTimeout(() => {\n      this.sortData(this.state.sortType);\n      this.setState({\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 2000);\n  };\n\n  sortData = (sortCase) => {\n    this.setState(state => ({\n      sortType: sortCase,\n      direction: state.direction === 1 ? -1 : 1,\n      sortedTodoList: [...state.todos].sort((a, b) => {\n        switch (sortCase) {\n          case 'id':\n            return state.direction * (b[sortCase] - a[sortCase]);\n          case 'completed':\n            return state.direction * (b[sortCase] - a[sortCase]);\n          case 'title':\n            return state.direction * a[sortCase].localeCompare(b[sortCase]);\n          case 'userId':\n            return state.direction * (b[sortCase] - a[sortCase]);\n          default: return 0;\n        }\n      }),\n    }));\n  };\n\n  render() {\n    const todosWithUser = this.state.sortedTodoList.map(todo => ({\n      ...todo,\n      user: this.state.users.find(user => user.id === todo.userId),\n    }));\n    console.log(this.state);\n    return (\n      <main>\n        {this.state.isLoaded ? (\n          <div className=\"App\">\n            <h1>Static list of todos</h1>\n            <table>\n              <thead>\n                <tr>\n                  <td>\n                    <button\n                      type=\"button\"\n                      onClick={() => this.sortData('id')}\n                    >\n                    Id\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      onClick={() => this.sortData('title')}\n                    >\n                    Title\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      onClick={() => this.sortData('userId')}\n                    >\n                    User\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      onClick={() => this.sortData('completed')}\n                    >\n                    Status\n                    </button>\n                  </td>\n                </tr>\n              </thead>\n              {\n                todosWithUser.map(todo => (\n                  <TodoItem todoItem={todo} />\n                ))\n              }\n            </table>\n          </div>\n        ) : (\n          <button\n            className=\"BTN\"\n            type=\"submit\"\n            onClick={this.handleClick}\n          >\n            {this.state.isLoading ? 'Loading...' : 'Load'}\n          </button>\n        )}\n      </main>\n    );\n  }\n}\n\npropTypes.state = {\n  users: propTypes.shape({\n    id: propTypes.number,\n    name: propTypes.string,\n    username: propTypes.string,\n    email: propTypes.string,\n    address: propTypes.shape({\n      street: propTypes.string,\n      suite: propTypes.string,\n      city: propTypes.string,\n    }),\n    phone: propTypes.string,\n    website: propTypes.string,\n    company: propTypes.shape({\n      name: propTypes.string,\n    }),\n  }),\n  todos: propTypes.shape({\n    userId: propTypes.number,\n    id: propTypes.number,\n    title: propTypes.string,\n    completed: propTypes.boolean,\n  }),\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}