{"version":3,"sources":["propTypes.js","api/api.js","TodoItem.js","App.js","index.js"],"names":["propTypes","state","users","shape","id","number","name","string","username","email","address","street","suite","city","phone","website","company","todos","userId","title","completed","boolean","baseUrl","getTodos","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","urlParams","response","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","_x","apply","this","arguments","getUsers","_ref2","_callee2","_context2","TodoItem","todoItem","react_default","createElement","key","className","user","type","checked","App","sortedTodoList","isLoaded","isLoading","sortType","sortDirection","_this","sortData","sortCase","setState","direction","toConsumableArray","sort","b","localeCompare","handleClick","loadData","then","userData","_this2","todosData","previousState","map","todo","objectSpread","find","_this3","todosWithUser","onClick","src_TodoItem","disabled","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6e9c0696.chunk.js","sourcesContent":["import propTypes from 'prop-types';\n\npropTypes.state = {\n  users: propTypes.shape({\n    id: propTypes.number,\n    name: propTypes.string,\n    username: propTypes.string,\n    email: propTypes.string,\n    address: propTypes.shape({\n      street: propTypes.string,\n      suite: propTypes.string,\n      city: propTypes.string,\n    }),\n    phone: propTypes.string,\n    website: propTypes.string,\n    company: propTypes.shape({\n      name: propTypes.string,\n    }),\n  }),\n  todos: propTypes.shape({\n    userId: propTypes.number,\n    id: propTypes.number,\n    title: propTypes.string,\n    completed: propTypes.boolean,\n  }),\n};\n\nexport default propTypes;\n","const baseUrl = 'https://jsonplaceholder.typicode.com';\n\nexport const getTodos = async(urlParams) => {\n  const url = '/todos';\n  const response = await fetch(`${baseUrl}${url}${urlParams}`);\n  const todos = await response.json();\n  return todos;\n};\n\nexport const getUsers = async() => {\n  const url = '/users';\n  const response = await fetch(`${baseUrl}${url}`);\n  const users = await response.json();\n  return users;\n};\n","import propTypes from 'prop-types';\nimport React from 'react';\n\nconst TodoItem = ({ todoItem }) => (\n  <tr key={todoItem.id}>\n    <td\n      key={`tRow_row-${todoItem.id}--id`}\n      className=\"tableCell\"\n    >\n      {todoItem.id}\n    </td>\n    <td\n      key={`tRow_row-${todoItem.id}--title`}\n      className=\"tableCell\"\n    >\n      {todoItem.title}\n    </td>\n    <td\n      key={`tRow_row-${todoItem.id}--name`}\n      className=\"tableCell\"\n    >\n      {todoItem.user.name}\n    </td>\n    <td\n      key={`tRow_row-${todoItem.id}--completed`}\n      className=\"tableCell\"\n    >\n      <input\n        type=\"checkbox\"\n        checked={todoItem.completed}\n      />\n    </td>\n  </tr>\n);\nTodoItem.propTypes = {\n  todoItem: propTypes.shape({\n    id: propTypes.number,\n    completed: propTypes.bool,\n    title: propTypes.string,\n    user: propTypes.shape({\n      id: propTypes.number,\n      name: propTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport './App.css';\nimport propTypes from './propTypes';\nimport { getTodos, getUsers } from './api/api';\nimport TodoItem from './TodoItem';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    sortedTodoList: [],\n    users: [],\n    isLoaded: false,\n    isLoading: false,\n    sortType: 'id',\n    sortDirection: 1, // 1 = 'asc', // 2 = desc\n  };\n\n  urlParams =\n    `?_sort=${this.state.sortType}\n    &_order=${this.state.sortDirection === 1 ? 'asc' : 'desc'}`;\n\n  sortData = (sortCase) => {\n    this.setState(state => ({\n      sortType: sortCase,\n      direction: state.direction === 1 ? -1 : 1,\n      sortedTodoList: [...state.todos].sort((a, b) => {\n        if (sortCase === 'title') {\n          return state.direction * a[sortCase].localeCompare(b[sortCase]);\n        }\n        return state.direction * (b[sortCase] - a[sortCase]);\n      }),\n    }));\n  };\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    this.loadData()\n      .then(() => {\n        this.sortData(this.state.sortType);\n        this.setState({\n          isLoaded: true,\n          isLoading: false,\n        });\n      });\n  };\n\n  async loadData() {\n    await getUsers()\n      .then((userData) => {\n        this.setState(\n          { users: userData },\n        );\n      });\n    await getTodos(this.urlParams)\n      .then((todosData) => {\n        this.setState(previousState => (\n          {\n            todos: todosData.map(todo => ({\n              ...todo,\n              user: previousState.users.find(user => user.id === todo.userId),\n            })),\n          }\n        ));\n      });\n  }\n\n  render() {\n    const todosWithUser = this.state.sortedTodoList;\n    return (\n      <main>\n        {this.state.isLoaded ? (\n          <div className=\"App\">\n            <h1>Dynamic list of todos</h1>\n            <table className=\"table\" key=\"table\">\n              <thead key=\"table_head\">\n                <tr key=\"thead_row\">\n                  <th\n                    key=\"thead_row--id\"\n                    className=\"tableCell table__header-btn\"\n                    onClick={() => this.sortData('id')}\n                  >\n                    Id\n                  </th>\n                  <th\n                    key=\"thead_row--title\"\n                    className=\"tableCell table__header-btn\"\n                    onClick={() => this.sortData('title')}\n                  >\n                    Title\n                  </th>\n                  <th\n                    key=\"thead_row--userId\"\n                    className=\"tableCell table__header-btn\"\n                    onClick={() => this.sortData('userId')}\n                  >\n                    User\n                  </th>\n                  <th\n                    key=\"thead_row--completed\"\n                    className=\"tableCell table__header-btn\"\n                    onClick={() => this.sortData('completed')}\n                  >\n                    Status\n                  </th>\n                </tr>\n              </thead>\n              <tbody key=\"table_body\">\n                {\n                  todosWithUser.map(todo => (\n                    <TodoItem key={`todo-${todo.id}`} todoItem={todo} />\n                  ))\n                }\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <button\n            className=\"btn\"\n            type=\"submit\"\n            disabled={this.state.isLoading}\n            onClick={this.handleClick}\n          >\n            {this.state.isLoading ? 'Loading...' : 'Load'}\n          </button>\n        )}\n      </main>\n    );\n  }\n}\npropTypes.state = propTypes;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}